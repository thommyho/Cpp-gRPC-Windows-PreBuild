trigger:
- testing

pool:
  vmImage: windows-2022
workspace:
      clean: all
    
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.12'
    addToPath: true
    architecture: 'x64'

- task: DownloadSecureFile@1
  name: FetchSSHKey
  inputs:
    secureFile: 'id_rsa'  # The name of your SSH private key file

- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: |
      github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    sshKeySecureFile: id_rsa
# Install NASM using Chocolatey
- script: |
    where choco
    choco install nasm -y --verbose
  displayName: Install NASM with Chocolatey

# Add NASM to PATH explicitly
- script: |
    Write-Host "##vso[task.prependpath]C:\Program Files\NASM\"
  displayName: Add NASM to PATH

# Verify NASM installation
- script: |
    echo "Updated PATH: %PATH%"
    where nasm
    nasm --version
  displayName: Verify NASM Installation
# Install NASM using Chocolatey
#- script: |
#    where choco
#    choco install nasm -y --verbose
#  Add NASM to path
#- script: |
#    echo "##vso[task.prependpath]C:\Program Files\NASM"
#  displayName: Install NASM
#- script: |
#    nasm --version
#  displayName: Smoke test nasm compiler
# Step to install Python package from GitHub
- script: |
    python -m pip install --upgrade pip    
    python -m pip install git+https://$(GITHUB_USER):$(GITHUB_PAT)@github.com/$(GITHUB_USER)/gci-cli.git@develop
  displayName: Install gci-cli from Private GitHub Repository (Develop Branch)
- script:  |
    gci version
  displayName: Smoke test of gci
# Prepare fetching information
- script: |
      md _info
  displayName: 'Create Subdirectory _info'

- script:  |
    $env:Path += ";C:\Program Files\NASM"  # Ensure the path is set for this step
    gci platform generate-tools-info
    gci-cli release generate-repository-info --latest
  workingDirectory: $(Build.SourcesDirectory)/_info

- task: PublishBuildArtifacts@1
  displayName: 'Archive and publish to Azure'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: $(Build.SourcesDirectory)/_info

